#!/usr/bin/env python

import sys
import os
import select
import tty
import termios
import imgtec
from imgtec.console import *

sys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)

da = sys.argv[1]
tspec = sys.argv[2]
channel = int(sys.argv[3])
dev = None
quit = False

def connect():
	global dev, da, tspec, channel
	probe(da)
	devs = listdevices()
	for x in devs:
		name = str(x)
		if name.startswith(tspec):
			dev = x
	autodetect()
	config("Max FDC Channels",16,probe)

def isData():
	return select.select([sys.stdin], [], [], 0) == ([sys.stdin], [], [])

def termLoop():
	global dev, quit
	old_settings = termios.tcgetattr(sys.stdin)
	esc = False
	try:
		tty.setcbreak(sys.stdin.fileno())

		while 1:
			sys.stdout.write(dev.tiny.ChannelReadString(channel))

			if isData():
				c = sys.stdin.read(1)

				if esc == True:
					esc = False
					if c == '~':
						dev.tiny.ChannelWriteString(channel, "~")
					elif c == '.':
						quit = True
						break
				else:
					if c == '~':
						esc = True
					else:
						dev.tiny.ChannelWriteString(channel, str(c))

	finally:
		termios.tcsetattr(sys.stdin, termios.TCSADRAIN, old_settings)

while quit == False:
	connect()
	try :
		termLoop()
	except imgtec.codescape.da_exception.CommsTargetCommandNotAvailableError:
		pass
	except imgtec.codescape.da_exception.CommsTimeoutError:
		pass
